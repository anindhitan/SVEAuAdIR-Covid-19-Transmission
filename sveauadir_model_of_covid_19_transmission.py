# -*- coding: utf-8 -*-
"""SVEAuAdIR Model of COVID-19 Transmission

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Adem1h2nkdqwfqr0VDbXhdpv8HARH6u_

# SVEAuAdIR Model of COVID-19 Transmission
"""

import numpy as np
import matplotlib.pyplot as plt

teta = 0.018
miu = 0.007
beta = 0.000000094
sigma = 0.037
omega = 0.167
alfa = 0.250
p = 0.420 
nu = 0.367 
eta = 0.06
gamma = 0.946
gammanol = 0.270
delta = 0.011
psi = 0.007
N = 272229372

def func_S(t, I, S, R):
    return (teta * N) - (beta * I * S / N) - (sigma * S * I/N) - (miu * S) + (delta * R)

def func_V(t, S, V, I):
    return (sigma * S * I/N) - (omega * V) - (miu * V)

def func_E(t, S, E, I):
    return (beta * I * S / N) - (p * alfa * E) - (alfa * E) - (miu * E)

def func_Au(t, E, Au):
    return (p * alfa * E) - (nu * Au) - (Au * gammanol) - (miu * Au)

def func_Ad(t, Au, Ad):
    return (nu * Au) - (eta * Ad) - (gammanol * Ad) - (miu * Ad)

def func_I(t, E, Ad, I):
    return (alfa * E) + (eta * Ad) - (gamma * I) - (miu * I) - (psi * I)

def func_R(t, V, Au, Ad, I, R):
    return (omega * I) + (Ad * gammanol) + (gammanol * Au) + (gamma * I) - (miu * R) - (delta * R)


# physical parameters

V0 = 11741559
E0 = 1647138
Au0 = 3898
Ad0 = 1647138
I0 = 4402
R0 = 3804
S0 = 257180939
t0 = 0
tn = 365


# Numerical Parameters
ndata = 365

t = np.linspace(t0,tn,ndata)
h = t[2] - t[1]

S = np.zeros(ndata)
V = np.zeros(ndata)
E = np.zeros(ndata)
Au = np.zeros(ndata)
Ad = np.zeros(ndata)
I = np.zeros(ndata)
R = np.zeros(ndata)

S[0] = S0
V[0] = V0
E[0] = E0
Au[0] = Au0
Ad[0] = Ad0
I[0] = I0
R[0] = R0


for i in range(ndata-1):
    k1 = func_S(t[i], S[i], I[i], R[i])
    k2 = func_S(t[i] + 0.5 * h, S[i] + 0.5 * k1, I[i] + 0.5 * k1, R[i] + 0.5 * k1)
    k3 = func_S(t[i] + 0.5 * h, S[i] + 0.5 * k2, I[i] + 0.5 * k2, R[i] + 0.5 * k2)
    k4 = func_S(t[i] + h, S[i] + k3, I[i] + k3, R[i] + k3)
    
    S[i+1] = S[i] + (1.0 / 6.0)*(k1 + 2 * k2 + 2 * k3 + k4)
    
    l1 = func_V(t[i], S[i], V[i], I[i])
    l2 = func_V(t[i] + 0.5 * h, S[i] + 0.5 * l1, V[i] + 0.5 * l1, I[i] + 0.5 * l1)
    l3 = func_V(t[i] + 0.5 * h, S[i] + 0.5 * l2, V[i] + 0.5 * l2, I[i] + 0.5 * l2)
    l4 = func_V(t[i] + h, S[i] + l3, V[i] + l3, I[i] + l3)

    V[i+1] = V[i] + (1.0 / 6.0)*(l1 + 2 * l2 + 2 * l3 + l4)
	
    m1 = func_E(t[i], S[i], I[i], E[i])
    m2 = func_E(t[i] + 0.5 * h, S[i] + 0.5 * m1, I[i] + 0.5 * m1, E[i] + 0.5 * m1)
    m3 = func_E(t[i] + 0.5 * h, S[i] + 0.5 * m2, I[i] + 0.5 * m2, E[i] + 0.5 * m2)
    m4 = func_E(t[i] + h, S[i] + m3, I[i] + m3, E[i] + m3)

    E[i+1] = E[i] + (1.0 / 6.0)*(m1 + 2 * m2 + 2 * m3 + m4)
    
    n1 = func_Au(t[i], E[i], Au[i])
    n2 = func_Au(t[i] + 0.5 * h, E[i] + 0.5 * n1, Au[i] + 0.5 * n1)
    n3 = func_Au(t[i] + 0.5 * h, E[i] + 0.5 * n2, Au[i] + 0.5 * n2)
    n4 = func_Au(t[i] + h, E[i] + n3, Au[i] + n3)

    Au[i+1] = Au[i] + (1.0 / 6.0)*(n1 + 2 * n2 + 2 * n3 + n4)
 
    o1 = func_Ad(t[i], Au[i], Ad[i])
    o2 = func_Ad(t[i] + 0.5 * h, Au[i] + 0.5 * o1, Ad[i] + 0.5 * o1)
    o3 = func_Ad(t[i] + 0.5 * h, Au[i] + 0.5 * o2, Ad[i] + 0.5 * o2)
    o4 = func_Ad(t[i] + h, Au[i] + o3, Ad[i] + o3)

    Ad[i+1] = Ad[i] + (1.0 / 6.0)*(o1 + 2 * o2 + 2 * o3 + o4)
 
    r1 = func_I(t[i], E[i], Ad[i], I[i])
    r2 = func_I(t[i] + 0.5 * h, E[i] + 0.5 * r1, Ad[i] + 0.5 * r1, I[i] + 0.5 * r1)
    r3 = func_I(t[i] + 0.5 * h, E[i] + 0.5 * r2, Ad[i] + 0.5 * r2, I[i] + 0.5 * r2)
    r4 = func_I(t[i] + h, E[i] + r3, Ad[i] + r3, I[i] + r3)

    I[i+1] = I[i] + (1.0 / 6.0)*(r1 + 2 * r2 + 2 * r3 + r4)
 
    q1 = func_R(t[i], I[i], Ad[i], Au[i], V[i], R[i])
    q2 = func_R(t[i] + 0.5 * h, I[i] + 0.5 * q1, Ad[i] + 0.5 * q1, Au[i] + 0.5 * q1, V[i] + 0.5 * q1, R[i] + 0.5 * q1)
    q3 = func_R(t[i] + 0.5 * h, I[i] + 0.5 * q2, Ad[i] + 0.5 * q2, Au[i] + 0.5 * q2, V[i] + 0.5 * q2, R[i] + 0.5 * q2)
    q4 = func_R(t[i] + h, I[i] + q3, Ad[i] + q3, Au[i] + q3, V[i] + q3, R[i] + q3)

    R[i+1] = R[i] + (1.0 / 6.0)*(q1 + 2 * q2 + 2 * q3 + q4)
 
    
plt.figure(1)
plt.style.use('seaborn')
plt.plot(t, S, label = "S", color = 'blue')
plt.plot(t, V, label = "V", color = 'black')
plt.plot(t, E, label = "E", color = 'pink')
plt.plot(t, Au, label = "Au", color = 'orange')
plt.plot(t, Ad, label = "Ad", color = 'purple')
plt.plot(t, I, label = "I", color = 'red')
plt.plot(t, R, label = "R", color = 'green')
plt.xlabel('Day')
plt.ylabel('Number of Individuals')
plt.legend()
plt.show()